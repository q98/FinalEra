import { NodeMaterialBlock } from '../nodeMaterialBlock';
import { NodeMaterialBuildState } from '../nodeMaterialBuildState';
import { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';
import { Color3 } from '../../../Maths/math.color';
import { Scene } from '../../../scene';
/**
 * Class used to store a color step for the GradientBlock
 */
export declare class GradientBlockColorStep {
    /**
     * Gets or sets a value indicating which step this color is associated with (between 0 and 1)
     */
    step: number;
    /**
     * Gets or sets the color associated with this step
     */
    color: Color3;
    /**
     * Creates a new GradientBlockColorStep
     * @param step defines a value indicating which step this color is associated with (between 0 and 1)
     * @param color defines the color associated with this step
     */
    constructor(
    /**
     * Gets or sets a value indicating which step this color is associated with (between 0 and 1)
     */
    step: number, 
    /**
     * Gets or sets the color associated with this step
     */
    color: Color3);
}
/**
 * Block used to return a color from a gradient based on an input value between 0 and 1
 */
export declare class GradientBlock extends NodeMaterialBlock {
    /**
     * Gets or sets the list of color steps
     */
    colorSteps: GradientBlockColorStep[];
    /**
     * Creates a new GradientBlock
     * @param name defines the block name
     */
    constructor(name: string);
    /**
     * Gets the current class name
     * @returns the class name
     */
    getClassName(): string;
    /**
     * Gets the gradient input component
     */
    get gradient(): NodeMaterialConnectionPoint;
    /**
     * Gets the output component
     */
    get output(): NodeMaterialConnectionPoint;
    private _writeColorConstant;
    protected _buildBlock(state: NodeMaterialBuildState): this | undefined;
    serialize(): any;
    _deserialize(serializationObject: any, scene: Scene, rootUrl: string): void;
    protected _dumpPropertiesCode(): string;
}
